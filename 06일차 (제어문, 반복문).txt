# ls() -- 선언한 값들 확인할 수 있다.  
  rm(y) -- 선언한 값 제거
  rm(list=ls()) -- 전부 제거
  ls()
  character(0) -- 비였다는 것을 의미

# 제어문 - 조건의 흐름을 제어하는 방법

1. if 문 : 조건에 따라 서로 다른 코드를 수행하도록 하는 문장을 의미한다.

if(조건){
		조건이 참일 때 수행하는 문장
	} 
	else 
	{
		조건이 거짓일 때 수행하는 문장
	}

예) 
if(1>2){
		print("1이 2보다 크다")
	}  -- 조건이 FALSE이므로 아무작업이 나오지 않는다.


if(2>1){
		print("2가 1보다 크다")
	}
[1] "2가 1보다 크다"

if(1>2){
		print("2가 1보다 크다")
	}
	else
	{
		print("1은 2보다 작다")
	}
[1] "1은 2보다 작다"

2. ifelse함수 
	ifelse(조건, 참, 거짓)

# else 안에도 if를 쓰는 것이 가능하다.

if (x==1) {'남은 기간 최선을 다하자'} else { if(x==2) {'내년에도 다른 학원 또 다니지뭐'} else { if(x==3) { ' 그냥 사는거지 뭐'}}} 

3. switch
- swtich(변수,실행문1,실행문2,....) 변수 값에 따라 조건에 맞는 실행문을 수행한다. 변수값은 단일값만 가능하다.

x<-1
switch(x,'남은 기간 최선을 다하자','행복하자','건강하게살자')
[1] "남은 기간 최선을 다하자"
x<-2
[1] "행복하자"
> x<-3
[1] "건강하게살자"

# 변수 값에 따른 값을 불러오는 것도 가능하다.

x <- '산'
switch(x,'산'='한라산 가고싶다.','바다'='함덕해수욕장 가고싶다.',paste0(x,'그냥 방콕하세요'))

# 반복문 

1. for문 <변수= count 변수, 데이터변수= 값>

	for(변수 in 데이터변수){
				반복수행할 문장
				}

	for (i in 1:10){
			print(i)
			}
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] 8
[1] 9
[1] 10

2. while문
	
	while(조건){
			반복수행할 문장
		   }
	i<-1
	while(i<=10){
			print(i)
			i<-i+1
		    } 

3. repeat - 무한루프, break를 반드시 해줘야한다. 
	
	repeat{
		반복수행할 문장
		break
		}

i<-1
  repeat{
        print(i)
        if (i==10){break}
        i<-i+1
        }