jAVA.JRE 설치 경로를 확인해야 한다.
C:\Program Files\Java\jre1.8.0_102\bin
# path 걸기 
컴퓨터 -> 설정 -> 고급시스템설정 -> 환경변수 -> 시스템 변수에 path 누르고 편집 -> 맨 마지막 끝에 ;C:\Program Files\Java\jre1.8.0_102\bin

www.java.com/kr - 무료다운로드/JRE 다운로드

install.packages("RJDBC") # R에서 ORACLE DB연동
library(RJDBC) # 라이브러리 설치
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/data/ojdbc6.jar") # 네트워크 설정, ojdbc6.jar: 오라클과 연동되게 하는 파일  
conn <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@localhost:1521/xe", "hr",  "hr") # localhost-> 연결할 컴퓨터,IP주소/SID (memory이름), 오라클계정, 패스워드
emp <- dbGetQuery(conn, "select * from employees")
dept <- dbGetQuery(conn, "select * from departments")

[문제172] R에서 오라클 접속한 후 부서별 인원수에 대한 막대그래프 그리세요.

library(RJDBC)
emp <- dbGetQuery(conn, "select * from employees")
dept <- dbGetQuery(conn, "select * from departments")
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/data/ojdbc6.jar") # 네트워크 설정, ojdbc6.jar: 오라클과 연동되게 하는 파일  
conn <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@localhost:1521/xe", "hr",  "hr") # localhost-> 연결할 컴퓨터,IP주소/SID (memory이름), 오라클계정, 패스워드
library(dplyr)
library(plyr)
a<-ddply(emp,'DEPARTMENT_ID',summarise,deptid_cn=length(EMPLOYEE_ID))
a[which(is.na(a)),c('DEPARTMENT_ID')]<-c('부서없음')
b<-barplot(a$deptid_cn,ylim=c(0,50),names.arg = a$DEPARTMENT_ID,col=rainbow(length(a$DEPARTMENT_ID)),main='부서별 인원수',xlab='부서번호',axes=FALSE)
text(x=b,y=a$deptid_cn,paste(a$deptid_cn,'명',sep=""),pos=3)
legend("topright",a$DEPARTMENT_ID,fill=rainbow(length(a$DEPARTMENT_ID)),cex=0.5,title='부서번호',title.col='red')

aa<-ddply(emp,'DEPARTMENT_ID',summarise,deptid_cn=length(EMPLOYEE_ID))
c<-merge(aa,dept,by='DEPARTMENT_ID',all.x=T)[,c('DEPARTMENT_ID','DEPARTMENT_NAME','deptid_cn')]
aggregate(EMPLOYEE_ID~DEPARTMENT_ID,emp,length)
tapply(emp$EMPLOYEE_ID,emp$DEPARTMENT_ID,length)

# 내림차순 정리 
library(doBy)
d<-orderBy(~-deptid_cn,aa)
d[which(is.na(d)),c('DEPARTMENT_ID')]<-c('부서없음')
e<-barplot(d$deptid_cn,ylim=c(0,50),names.arg = d$DEPARTMENT_ID,col=rainbow(length(d$DEPARTMENT_ID)),main='부서별 인원수',xlab='부서번호',axes=FALSE)
text(x=e,y=d$deptid_cn,paste(d$deptid_cn,'명',sep=""),pos=3)
legend("topright",d$DEPARTMENT_ID,fill=rainbow(length(d$DEPARTMENT_ID)),cex=0.5,title='부서번호',title.col='red')
```


[문제173] 아래와 같은 결과를 출력하도록 SQL문을 작성하세요.


Job                     Dept 10    Dept 20    Dept 30    Dept 40    Dept 50    Dept 60    Dept 70    Dept 80    Dept 90   Dept 100
-------------------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
AC_MGR
AC_ACCOUNT
IT_PROG                                                                          28800
ST_MAN                                                                36400
AD_ASST                       0
PU_MAN                                          11000
SH_CLERK                                                              64300
AD_VP                                                                                                     35700
FI_ACCOUNT                                                                                                           39600
MK_MAN                               13000
PR_REP                                                                                      10000
FI_MGR                                                                                                               12008
PU_CLERK                                        13900
SA_MAN                                                                                                 61000
MK_REP                                6000
AD_PRES                                                                                                   26400
SA_REP                                                                                                243500
HR_REP                                                      6500
ST_CLERK                                                              55700


select job,decode(dept_id,10,sum_sal)  as Dept_10,
           decode(dept_id,20,sum_sal)  as Dept_20,
           decode(dept_id,30,sum_sal)  as Dept_30,
           decode(dept_id,40,sum_sal)  as Dept_40,
           decode(dept_id,50,sum_sal)  as Dept_50,
           decode(dept_id,60,sum_sal)  as Dept_60,
           decode(dept_id,70,sum_sal)  as Dept_70,
           decode(dept_id,80,sum_sal)  as Dept_80,
           decode(dept_id,90,sum_sal)  as Dept_90,
           decode(dept_id,100,sum_sal) as Dept_100
           from (select job_id job,department_id dept_id, sum(salary) sum_sal 
                 from employees 
                 group by department_id,job_id

[문제174] 문제 173번에서 만든 SQL문을 R에서 오라클로 접속하셔서 수행하세요.

library(RJDBC)
emp <- dbGetQuery(conn, "select * from employees")
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/data/ojdbc6.jar") 
conn <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@localhost:1521/xe", "hr",  "hr") 

dbGetQuery(conn,"select job,decode(dept_id,10,sum_sal)  as Dept_10,
                            decode(dept_id,20,sum_sal)  as Dept_20,
                            decode(dept_id,30,sum_sal)  as Dept_30,
                            decode(dept_id,40,sum_sal)  as Dept_40,
                            decode(dept_id,50,sum_sal)  as Dept_50,
                            decode(dept_id,60,sum_sal)  as Dept_60,
                            decode(dept_id,70,sum_sal)  as Dept_70,
                            decode(dept_id,80,sum_sal)  as Dept_80,
                            decode(dept_id,90,sum_sal)  as Dept_90,
                            decode(dept_id,100,sum_sal) as Dept_100
                            from (select job_id job,department_id dept_id, sum(salary) sum_sal 
                                  from employees 
                                  group by department_id,job_id)")


[문제175] R에서 오라클에 있는 EMPLOYEE 테이블을 읽어 들인 후 R함수를 이용하셔서 문제 173번과 동일한 결과를 출력하세요


emp <- dbReadTable(conn, "EMPLOYEES")
tapply(emp$SALARY,list(emp$JOB_ID,emp$DEPARTMENT_ID),sum, default=0)

# 테이블로 옮기기 (R에서 오라클로)


emp_pivot<-dbGetQuery(conn,
           'SELECT job_id "Job",
           SUM(DECODE(department_id , 10, salary)) "Dept10",
           SUM(DECODE(department_id , 20, salary)) "Dept20",
           SUM(DECODE(department_id , 30, salary)) "Dept30",
           SUM(DECODE(department_id , 40, salary)) "Dept40",
           SUM(DECODE(department_id , 50, salary)) "Dept50",
           SUM(DECODE(department_id , 60, salary)) "Dept60",
           SUM(DECODE(department_id , 70, salary)) "Dept70",
           SUM(DECODE(department_id , 80, salary)) "Dept80",
           SUM(DECODE(department_id , 90, salary)) "Dept90",
           SUM(DECODE(department_id , 100, salary)) "Dept100"
           FROM employees
           GROUP BY job_id')

str(emp_pivot)
emp_pivot
dbWriteTable(conn, "emp_it",emp_pivot )

# dbWriteTable(접속환경변수, "생성할 테이블이름 짓기", 기존에 있는 데이터 프레임 )

emp_pivot[is.na(emp_pivot)]<-0 # 안될경우 NA를 다른 값으로 바꿔서 넣는다.


# R로 테이블 불러오기

dbReadTable(conn,"EMP_IT") # 테이블을 불러올 땐 반드시 대문자로 불러온다.

# R에서 테이블 지우기

dbSendUpdate(conn, "drop table EMP_IT")


# ggplot 


df<-read.csv("c:/data/exam.csv",header = T,stringsAsFactors = FALSE)
str(df)
x<-df[df$subject=='SQL',]

ggplot(x,aes(x=name,y=grade))+
        geom_bar(stat="identity",fill="green",colour="red")+      # stat= 막대그래프 기본설정, fill= 색깔, color=테두리 색
        theme(axis.text.x=element_text(angle=45,hjust=1,vjust=1,colour = "blue",size=10)) # axis.text.x=x축 설정 element_text(angle=각도,hjust=가로,vjust=세로)


# 정렬 및 스택형/그룹형 그래프를 ggplot으로 표현하는 방법

library(doBy)
df2<-orderBy(~name+subject,df)

library(plyr)
df1<-arrange(df,name,subject)

ggplot(df2,aes(x=name,y=grade,fill=subject))+
        geom_bar(stat="identity")+
        geom_text(aes(y=grade,label=paste(grade,"점")),col="black",size=4,position=position_stack(vjust=0.5))+
        theme(axis.text.x=element_text(angle=45,hjust=1,vjust=1,colour = "blue",size=10))+
        ggtitle("itwill 학생 성적",subtitle="중간고사")+
        labs(x="이름",y="점수",fill="과목")

ggplot(data=df,aes(subject,grade,group=name))+
       geom_col(aes(fill=name),position="stack")+
       geom_text(aes(label=grade),position=position_stack(vjust = 0.5))

ggplot(data=df,aes(name,grade,group=subject))+
       geom_col(aes(fill=subject),position="stack")+
       geom_text(aes(label=grade),position=position_stack(vjust = 0.5))


ggplot(data=df,aes(subject,grade,group=name))+
       geom_col(aes(fill=name),position="dodge")+
       geom_text(aes(label=grade),position=position_dodge(0.9),vjust=0)

ggplot(data=df,aes(name,grade,group=subject))+
       geom_col(aes(fill=subject),position="dodge")+
       geom_text(aes(label=grade),position=position_dodge(0.9),vjust=0,size=4)

[문제176] 부서 인원수를 ggplot를 이용해서 막대그래프를 출력하세요.

a<-ddply(emp,'DEPARTMENT_ID',summarise,dept_cn=NROW(EMPLOYEE_ID))
a$DEPARTMENT_ID
a$dept_cn
a$DEPARTMENT_ID[is.na(a$DEPARTMENT_ID)]<-0
ggplot(a,aes(x=DEPARTMENT_ID,y=dept_cn))+
      geom_bar(stat="identity",fill="blue",colour="black")+
      theme(axis.text.x=element_text(angle=45,hjust=1,vjust=1,colour = "black",size=10))+
      ggtitle("부서별 직원 수")+
      labs(x="부서번호",y="인원 수 (단위: 명)")+  
      geom_text(aes(label=dept_cn),position=position_stack(vjust = 0.5),color="red")

# x축값이 다 나오지 않는 이유는 숫자이기 때문에 그렇다. 따라서 factor로 바꿔주면 원하는 방향으로 값이 나온다.

[문제177] 년도별 입사한 수를 ggplot를 이용해서 막대그래프를 출력하세요.

b<-dbGetQuery(conn,"select to_char(hire_date,'yyyy') as year,count(*) as cn from employees group by to_char(hire_date,'yyyy')")
b$YEAR<-as.numeric(b$YEAR)
b<-orderBy(~YEAR,b)
b
ggplot(b,aes(x=YEAR,y=CN))+
      geom_bar(stat="identity",fill="green",colour="red")+
      theme(axis.text.x=element_text(angle=45,hjust=1,vjust=1,colour = "black",size=10))+
      ggtitle("연도별 입사 한 수")+
      labs(x="연도",y="인원 수 (단위 : 명)")+
      geom_text(aes(label=CN),position=position_stack(vjust = 0.5),color="red")


#선생님 답

emp <- dbGetQuery(conn, "select nvl(department_id,0) dept_id, count(*) cn from employees group by nvl(department_id,0) order by cn desc")
emp

ggplot(emp, aes(x=factor(DEPT_ID),y=CN))+
  geom_bar(stat="identity", fill= rainbow(12))+
  geom_text(aes(label=CN),vjust=-0.1,size=5)+
  labs(title='부서별 인원 현황', x='부서번호', y='인원수(명)')+
  theme(plot.title=element_text(face='bold', color='darkblue', hjust=0.5))+
  theme(axis.title.x=element_text(face='bold.italic', color='brown',size=6))+
  theme(axis.title.y=element_text(face='bold.italic', color='brown'))



library(plyr) # count::plyr

emp <- dbGetQuery(conn, "select * from employees")

ggplot(emp,aes(x=year(HIRE_DATE)))+
  geom_bar()

ggplot(emp, aes(x=factor(year(HIRE_DATE)), fill=factor(year(HIRE_DATE))))+
  geom_bar()+
  labs(title = "년도별 입사현황", x="년도", y="인원수", fill="년도")+
  theme(plot.title=element_text(face='bold', color='darkblue', hjust=0.5))+
  theme(axis.title.x=element_text(face='bold', color='darkblue'))+
  theme(axis.title.y=element_text(face='bold', color='darkblue'))+
  theme(legend.title.align=0.5, legend.box.background = element_rect(),
        legend.box.margin = margin(t=0.1,r=0.1, b=0.1, l=0.1,unit='cm'))


year_cn <- count(emp,"year(HIRE_DATE)")
colnames(year_cn) <- c("year","cn")
year_cn

ggplot(year_cn,aes(x=year,y=cn,fill=factor(year)))+
  geom_bar(stat="identity")+
  geom_text(aes(label=cn))+
  ggtitle("년도별 입사현황",subtitle="신입사원")+
  theme(plot.title = element_text(lineheight=.8, face="bold",color="darkblue",hjust=0.5))+
  theme(plot.subtitle = element_text(lineheight=.8, face="bold",color="darkblue",hjust=0.5))+
  labs(caption = "2001년 ~ 2008년")+
  labs(x="년도",y="인원수")+
  guides(fill=guide_legend(title="년도"))+
  theme(legend.title.align=0.5, legend.box.background = element_rect(),
      legend.box.margin = margin(t=0.1,r=0.1, b=0.1, l=0.1,unit='cm'))
  

hire_cn <- dbGetQuery(conn, "select to_char(hire_date,'yyyy') year,count(*) cn from employees group by to_char(hire_date,'yyyy')")
hire_cn
ggplot(hire_cn,aes(x=YEAR,y=CN,fill=YEAR))+
  geom_bar(stat="identity")+
  geom_text(aes(label=CN))+
  labs(title = "년도별 입사현황", x="년도", y="인원수", fill="년도")+
  theme(plot.title=element_text(face='bold', color='darkblue', hjust=0.5))+
  theme(axis.title.x=element_text(face='bold', color='darkblue'))+
  theme(axis.title.y=element_text(face='bold', color='darkblue'))+
  theme(legend.title.align=0.5, legend.box.background = element_rect(),
        legend.box.margin = margin(t=0.1,r=0.1, b=0.1, l=0.1,unit='cm'))


[문제178] 학생들의 과목 점수를 각각으로 막대그래프를 그리세요.


df <- read.csv("c:/data/exam.csv", header=TRUE, stringsAsFactors=F)
df

ggplot(df, aes(x=name, y=grade))+
  geom_bar(stat="identity",fill="red")+
  theme(axis.text.x = element_blank())+
  facet_wrap(~ name+subject)


ggplot(df, aes(x=subject, y=grade, group=name))+
  geom_col(aes(fill=subject))+
  theme(axis.text.x = element_blank())+
  facet_wrap(~ name)


